import { useLocation } from 'react-router-dom';
import Navbar from '@/components/layout/Navbar';
import Footer from '@/components/layout/Footer';
import { useEffect, useState } from 'react';
import { updatePaymentStatus, getPaymentById } from '../../api/orderApi';
import { generateQRCode } from '../../api/orderApi'; 
import { motion } from "framer-motion";
import { TicketCheck, Calendar, MapPin, QrCode, Repeat, User, Phone } from "lucide-react";

const PaymentResult = () => {
  const location = useLocation();
  const queryParams = new URLSearchParams(location.search);
  const responseCode = queryParams.get('code');
  const orderId = queryParams.get('orderId');
  console.log("queryParam", queryParams);
  
  const [ticketInfo, setTicketInfo] = useState(null);
  console.log(responseCode);

  const [qrCode, setQrCode] = useState<string | null>(null);
  const isLimitedType = ["luot", "khu hoi", "nhom"].includes(ticketInfo?.ticketType)
  const formatDate = (dateStr: string) => new Date(dateStr).toLocaleDateString("vi-VN");

  console.log(ticketInfo)
  // L·∫•y th√¥ng tin v√© v√† c·∫≠p nh·∫≠t tr·∫°ng th√°i thanh to√°n
  useEffect(() => {
    if (responseCode === '00' && orderId) {
      getPaymentById(orderId)
        .then((response) => {
          setTicketInfo(response.data);
  
          // C·∫≠p nh·∫≠t tr·∫°ng th√°i v√† t·∫°o QR
          updatePaymentStatus(orderId, 'paid')
            .then(() => {
              console.log('ƒê√£ c·∫≠p nh·∫≠t tr·∫°ng th√°i');
              return generateQRCode(orderId);
            })
            .then((qr) => {
              setQrCode(qr);
            })
            .catch((error) => console.error('L·ªói khi t·∫°o QR:', error));
        })
        .catch((error) => {
          console.error('L·ªói khi l·∫•y th√¥ng tin v√©: ', error);
        });
    }
  }, [responseCode, orderId]);

  return (
  <div className="min-h-screen flex flex-col bg-blue-50 text-gray-800">
    <Navbar />

    <div className="text-center pt-[80px] py-4">
      <h1 className="text-xl font-semibold text-blue-700">üéâ Qu√Ω kh√°ch ƒë√£ mua v√© th√†nh c√¥ng!</h1>
    </div>

    <main className="flex-grow flex items-center justify-center p-6">
      {ticketInfo && (
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
          className="max-w-xl  w-full bg-white border-2 border-blue-100 rounded-3xl shadow-xl relative p-6"
        >
          {/* Header v√© */}
          <div className="flex items-center justify-between mb-4">
            <h2 className="text-lg font-semibold text-blue-700 flex items-center gap-2">
              <TicketCheck className="w-5 h-5" />
              V√© ƒëi·ªán t·ª≠
            </h2>
            <span className="text-sm text-blue-600">M√£ v√©: {ticketInfo.orderId}</span>
          </div>

          {/* N·ªôi dung v√© v√† m√£ QR */}
          <div className="flex justify-between space-x-6">
            {/* Th√¥ng tin v√© b√™n tr√°i */}
            <div className="space-y-3 text-sm flex-grow">
              <div className="flex items-center gap-2">
                <User className="w-4 h-4 text-blue-600" />
                <span>Ng∆∞·ªùi mua: {ticketInfo.userName}</span>
              </div>

              <div className="flex items-center gap-2">
                <Phone className="w-4 h-4 text-blue-600" />
                <span>SƒêT: {ticketInfo.userPhone}</span>
              </div>

              {isLimitedType && (
                <>
                  <div className="flex items-center gap-2">
                    <MapPin className="w-4 h-4 text-blue-600" />
                    <span>
                      {ticketInfo.routes[0]} ‚Üí {ticketInfo.routes[ticketInfo.routes.length - 1]}
                    </span>
                  </div>
                  <div className="flex items-center gap-2">
                    <Repeat className="w-4 h-4 text-blue-600" />
                    <span>
                      Lo·∫°i v√©: 
                      {ticketInfo?.ticketType === "luot" 
                        ? "V√© l∆∞·ª£t" 
                        : ticketInfo?.ticketType === "khuhoi" 
                        ? "V√© kh·ª© h·ªìi" 
                        : ticketInfo?.ticketType === "nhom" 
                        ? "V√© nh√≥m" 
                        : "V√© kh√°c"}
                    </span>
                  </div>
                </>
              )}

              {!isLimitedType && (
                <div className="flex items-center gap-2">
                  <Repeat className="w-4 h-4 text-blue-600" />
                  <span>
                    Lo·∫°i v√©: 
                    {ticketInfo?.ticketType === "thang" 
                      ? " V√© th√°ng" 
                      : ticketInfo?.ticketType === "tuan" 
                      ? " V√© tu·∫ßn" 
                      : " V√© ng√†y"}
                  </span>
                </div>
              )}

              <div className="flex items-center gap-2">
                <Calendar className="w-4 h-4 text-blue-600" />
                <span>Ng√†y mua: {formatDate(ticketInfo.createdAt)}</span>
              </div>

              <div className="flex items-center gap-2">
                <Calendar className="w-4 h-4 text-blue-600" />
                <span>
                  {isLimitedType ? (
                    <>
                      H·∫°n s·ª≠ d·ª•ng: {ticketInfo.usageCount ?? 0} l∆∞·ª£t
                      {ticketInfo.ticketType === 'nhom' && ticketInfo.groupSize && (
                        <> ‚Ä¢ {ticketInfo.groupSize} ng∆∞·ªùi</>
                      )}
                    </>
                  ) : (
                    <>H·∫°n d√πng: {formatDate(ticketInfo.expiryDate)}</>
                  )}
                </span>
              </div>
            </div>

            {/* M√£ QR b√™n ph·∫£i */}
            <div className="flex-shrink-0 flex justify-center items-center">
              <div className="border-2 border-dashed border-blue-300 p-3 rounded-xl">
                <img src={qrCode} alt="QR Code" className="w-40 h-40" />
              </div>
            </div>
          </div>

        </motion.div>
      )}
    </main>

    <div className="text-center py-4">
      <a
        href="/"
        className="text-blue-600 font-medium hover:underline transition"
      >
        ‚Üê Quay l·∫°i trang ch·ªß
      </a>
    </div>

    <Footer />
  </div>
);

}; 

export default PaymentResult;
